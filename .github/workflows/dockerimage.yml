name: Docker Image CI

on: [push]

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}

concurrency:
  group: dockerimage_group_${{ github.ref }}
  cancel-in-progress: true

jobs:
  # The docker image
  docker:
    runs-on: ubuntu-22.04-32c-128g
    timeout-minutes: 30

    steps:
      # Checkout Step
      - uses: actions/checkout@v3

      # Docker Buildx extended build operations
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3.2.0

      - name: Cache .build folder
        uses: actions/cache@v4.0.2
        with:
          path: .build
          key: ${{ runner.os }}-spm-${{ hashFiles('**/Package.resolved') }}-${{ hashFiles('**/*.swift') }}
          restore-keys: |
            ${{ runner.os }}-spm-

      # Github Container Registry
      - name: Log in to the Container registry
        uses: docker/login-action@v2.1.0
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      # Setup Step
      - name: Set env
        id: tag_env
        env:
          SHA_TAG: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
          LATEST_TAG: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:latest
          VERSION_TAG: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:${{ github.ref_name }}
        run: |
          export SHA_7=$(echo $GITHUB_SHA | head -c7)
          echo "SHA_TAG=$SHA_TAG:$SHA_7" >> $GITHUB_ENV
          echo "STAGING_TAG=$STAGING_TAG" >> $GITHUB_ENV
          echo "LATEST_TAG=$LATEST_TAG" >> $GITHUB_ENV
          echo "VERSION_TAG=$VERSION_TAG" >> $GITHUB_ENV

      # Expose tokens for next step
      - name: GitHub Runtime
        uses: crazy-max/ghaction-github-runtime@v3.0.0
      # Build Step
      - name: Build container image
        env:
          GITHUB_REF_NAME: ${{ github.ref_name }}
        run: >-
          docker buildx create --use --driver=docker-container &&
          docker buildx build
          --file ./Dockerfile
          -t ${{ env.SHA_TAG }}
          --cache-to type=gha,scope=$GITHUB_REF_NAME-proxy,mode=max
          --cache-from type=gha,scope=$GITHUB_REF_NAME-proxy
          --load
          .

      # Now pull the .build folder
      - name: Fetch build cache
        run: >-
          docker buildx build
          --file ./Dockerfile
          --target build
          -t proxy-buildcache:latest
          .
          &&
          docker run -d --name proxy-buildcache-container proxy-buildcache:latest /bin/sh
          &&
          docker container cp proxy-buildcache-container:/build/proxy/.build ./

      # Push Container Image Step
      - name: Push image to GitHub Container Registry
        run: docker push ${{ env.SHA_TAG }}

      # Tag as latest if on master
      - name: Retag Docker Image latest
        if: github.ref == 'refs/heads/master'
        run: docker tag ${{ env.SHA_TAG }} ${{ env.LATEST_TAG }} && docker push ${{ env.LATEST_TAG }}

      # Tag as tag if on tag
      - name: Retag Docker Image latest
        if: startsWith(github.ref, 'refs/tags/')
        run: docker tag ${{ env.SHA_TAG }} ${{ env.VERSION_TAG }} && docker push ${{ env.VERSION_TAG }}
